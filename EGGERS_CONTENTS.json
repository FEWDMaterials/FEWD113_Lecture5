{"home":{"content":"# Lecture 5: Layouts\n---\n\nWelcome! Here's a brief breakdown of class today.\n\n### Learning Objectives\n---\n\n1. Learn about the Box Model, a CSS layout paradigm\n2. Understand how we can use CSS concepts to achieve multiple layouts for our webpages\n3. Specifically, learn how to use floats to achieve multi-column grids\n\n#### Rundown\n---\n\n#### [Warmup](#warmup)\n#### [The Box Model](#the-box-model)\n#### [Floats](#floats)\n#### [FlexBox](#flexbox)\n","idx":0},"title":{"content":"Layouts","idx":1},"desc":{"content":"A deep dive into creating layouts with CSS","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin with a quick review.\n\n#### Exercise\n---\n\n**[Consider this repo](https://github.com/FEWDMaterials/RelativePathsReview)**.\n\nYou are given several \"websites\". However, they are set up in strange configurations! \n\n**For each folder**:\n\n1. **Without** rearranging the files, link the proper css folders in the **HEAD** section.\n2. If you do this right, hovering over the entire page in the browser will cause it to change colors.\n\n**QUESTION**: how else can you verify that the files are linking properly...?\n\n**FOLLOW UP**: also push these pages up to your github via **[GitBot](http://www.gitbot.co)**.","idx":3},"the-box-model":{"content":"# The Box Model\n---\n\nThe Box Model is a way of thinking about CSS DOM elements on the page. Instead of thinking of HTML elements as bits of HTML wrappers we style, we can think of them as boxes with specific dimensions and properties. Given this though, an HTML layout can be thought of as boxes within boxes.\n\n#### Exercises\n---\n\n1. ##### [Display Inline to Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_to_block) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_to_block)\n\n2. ##### [Display Block to Inline-Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_block_only) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_block_only)\n\n3. ##### [Simple Layouts](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Simple_Layout) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Simple_Layout)\n\n#### Margin, Padding, Border\n---\n\n<img src=\"http://blog.teamtreehouse.com/wp-content/uploads/2014/05/chrome-computed.png\" style=\"width: 100%;\">\n\n**Margin**: space in **between** DOM elements\n\n**Padding**: space **within** the DOM element\n\n**Border**: the outline **around** the DOM Element.\n\nIn general, the width of a DOM element is **padding** + **border** + **content**.\n\n#### Implications\n---\nThe main implications of this has to do with building **rows** with multiple tags / items inside of it. \n\nThe widths adding up to 100% isn't enough -- the **width** + **padding** + **border** + **margin** must add up to 100%!\n\n#### Box Sizing\n---\n\nThis is a useful tool. We can use box-sizing to force the padding to be **pulled into** our content width. This way, padding is **not** added to the overall width.\n\n**Types**: content-box, border-box\n\n","idx":4},"floats":{"content":"# Floats\n---\n\nDisplay methods, while effective, don't go very far in helping us make effective layouts. Floats are a concept (though kind of convoluted) which help us build complex layouts and grids with more ease.\n\n## [Technical Example](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Floats_Ex) | [Live Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Floats_Ex)\n\n#### Exercises\n---\nWe will solve these problems after our discussion period.\n\n#### [Simple Layouts with floats](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Layouts_with_floats) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Layouts_with_floats)\n\n#### [Addding Float](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Addding_Float) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Addding_Float)\n\n#### [Simple Clears](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Clears) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Clears)\n#### [Using Clearfix](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Using_Clearfix) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Using_Clearfix)\n\n<p></p>\n<p></p>\n\n\n#### Examples\n---\nWe will use these examples to understand the concept at hand.\n\n#### [Simple Three Column Layout](http://fewd.us/howdoi/#/problem/4258)\n#### [Clearfixing the Parent](http://fewd.us/howdoi/#/problem/4702)\n#### [Practical Example](http://fewd.us/howdoi/#/problem/4927)\n\n<p></p>\n<p></p>\n\n#### Important Facts\n---\n\n1. How do they work??\n2. A left-floated box will shift to the left until its leftmost margin edge (or border edge if margins are absent) touches either the edge of the containing block, or the edge of another floated box\n3. If the size of the floated box exceeds the available horizontal space, the floated box will be shifted down\n4. Non-positioned, non-floated, block-level elements act as if the floated element is not there, since the floated element is out of flow in relation to other block elements\n5. The root element (<html>) cannot be floated\n5. An inline element that is floated is converted to a block-level element\n\n\n#### Clears\n---\n\n1. This is the anti-float\n2. clearing an item (can be a floated or non floated item) will undo the effects of the float\n3. if we're smart about how we arrange our tag structures, we don't really need to rely on this too much\n\n#### The Collapsing Parent\n---\n\n1. float the parent (meh)\n2. empty div in markup with clear: both (meh)\n3. overflow: hidden or auto (better)\n4. clearfix (best)\n\n","idx":5},"flexbox":{"content":"# FlexBox\n---\n\nFlexbox is the newest standard which aims to help make it easier to build modern web interfaces with CSS. It's a spec that gives us ways to [\"lay out, align and distribute space among items in a container\"](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n\n#### Flex container\n---\n\nThis is the parent of the items you want to flex.\n\n#### Some properties\n---\n\n1. display\n2. flex-direction\n3. flex-wrap\n4. justify-content\n5. align-items\n6. align-content\n\n#### Flex items\n---\n\nThese are the properties for the children\n\n#### Some properties\n---\n\n1. order\n2. flex-grow\n3. flex-shrink\n4. align-self\n\nAlso, clear, float and vertical align have no effect on flex'd items.\n\n[More info here](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n#### Practice\n---\n\n1. [http://fewd.us/jargon/#/problem/10097](http://fewd.us/jargon/#/problem/10097)\n2. [http://fewd.us/jargon/#/problem/10098](http://fewd.us/jargon/#/problem/10098)\n3. [http://fewd.us/jargon/#/problem/10099](http://fewd.us/jargon/#/problem/10099)\n4. [http://fewd.us/jargon/#/problem/10100](http://fewd.us/jargon/#/problem/10100)","idx":6},"__list__":["home","title","desc","warmup","the-box-model","floats","flexbox"]}